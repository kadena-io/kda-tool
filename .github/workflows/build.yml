name: Build project

on: push

jobs:
  build:
    name: Build master with ${{ matrix.ghc }} / ${{ matrix.cabal }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.8.4']
        cabal: ['3.4']
        os: ['ubuntu-18.04', 'ubuntu-20.04', 'ubuntu-22.04', 'macOS-latest']

    steps:
    # Setup
    - name: Checkout repository
      uses: actions/checkout@v1

    # Haskell Setup
    - name: Install GHC and Cabal
      uses: haskell/actions/setup@v1.2.3
      with:
         ghc-version: ${{ matrix.ghc }}
         cabal-version: ${{ matrix.cabal }}
    - name: Confirm GHC and Cabal installation
      run: |
        ghc --version
        cabal --version
    - name: Setup PATHs (windows)
      if: "contains(matrix.os, 'windows')"
      shell: bash
      run: |
        echo "/c/ProgramData/chocolatey/lib/ghc/tools/ghc-${{ matrix.ghc }}/bin" >> $GITHUB_PATH
        echo "C:\\ProgramData\\chocolatey\\lib\\ghc\\tools\\ghc-${{ matrix.ghc }}\\bin" >> $GITHUB_PATH
        echo "/c/ProgramData/chocolatey/lib/cabal/tools/cabal-3.2.0.0" >> $GITHUB_PATH
        echo "C:\\ProgramData\\chocolatey\\lib\\cabal\\tools\\cabal-3.2.0.0" >> $GITHUB_PATH
        echo "/c/Users/runneradmin/AppData/Roaming/cabal/bin" >> $GITHUB_PATH
        echo "C:\\Users\\runneradmin\\AppData\\Roaming\\cabal\\bin" >> $GITHUB_PATH
        echo "/c/Program Files/Amazon/AWSCLI/bin" >> $GITHUB_PATH
        echo "C:\\Program Files\\Amazon\\AWSCLI\\bin" >> $GITHUB_PATH

        # these are needed for cabal-cache to work
        ln -s /c/ProgramData/chocolatey/lib/ghc/tools/ghc-${{ matrix.ghc }}/bin/ghc-pkg.exe /c/ProgramData/chocolatey/lib/ghc/tools/ghc-${{ matrix.ghc }}/bin/ghc-pkg-${{ matrix.ghc }}

    # Project Setup
    - uses: actions/cache@v2
      name: Cache dist-newstyle
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ matrix.os }}-${{ matrix.ghc }}-4-cabal

    # Build
    - name: Update package database
      run: cabal update
    - name: Display outdated packages
      run: cabal outdated
    - name: Install build dependencies
      run: cabal build --only-dependencies
    - name: Build
      run: cabal build

    # Upload artifacts
    - name: Copy build artifact
      run: cp `cabal list-bin exe:kda` .
    - name: Stripping binary
      run: strip kda
    - uses: actions/upload-artifact@v2
      with:
        name: kda-build-${{ matrix.os }}
        path: kda

    # Test
    - name: Test
      run: cabal v2-test

