name: Build project

on: push

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.8.4', "8.10.7", "9.0.2"]
        cabal: ['3.8']
        os: ['ubuntu-18.04', 'ubuntu-20.04', 'ubuntu-22.04', 'macOS-latest']

    steps:
    # Setup
    - name: Checkout repository
      uses: actions/checkout@v3

    # Haskell Setup
    - name: Install GHC and Cabal
      uses: haskell/actions/setup@v2.0.1
      with:
         ghc-version: ${{ matrix.ghc }}
         cabal-version: ${{ matrix.cabal }}
    - name: Confirm GHC and Cabal installation
      run: |
        ghc --version
        cabal --version

    # Project Setup
    - name: Create cabal.project.local
      if: matrix.ghc == '9.0.2' || matrix.ghc == '8.10.7'
      run: |
        cat > cabal.project.local <<EOF
        allow-newer: chainweb-api:*
        allow-newer: kadena-signing-api:*
        allow-newer: *:base
        EOF

    # dist cache
    # the cache-key forces uploading of cache at least once a day, which ensures that
    # upstream dependency changes are captured regularly.
    - name: Create date file for dist-newstyle cache key
      id: cache-date
      run: |
        echo "value=$(date +%Y.%j)" >> $GITHUB_OUTPUT
    - uses: actions/cache@v3
      name: Cache dist-newstyle
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ matrix.os }}-${{ matrix.ghc }}-${{ steps.cache-date.outputs.value }}-${{ hashFiles('cabal.*', '*.cabal', 'src/**', 'test/**') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.ghc }}-${{ steps.cache-date.outputs.value }}-
          ${{ matrix.os }}-${{ matrix.ghc }}-

    # Build
    - name: Update package database
      run: cabal update
    - name: Display outdated packages
      run: cabal outdated
    - name: Install build dependencies
      run: cabal build --only-dependencies
    - name: Build
      run: cabal build
    - name: Show installed packages
      run: cabal freeze && cat cabal.project.freeze

    # Upload artifacts
    - name: Copy build artifact
      run: cp `cabal list-bin exe:kda` .
    - name: Stripping binary
      run: strip kda
    - uses: actions/upload-artifact@v3
      with:
        name: kda-build-${{ matrix.os }}
        path: kda

    # Test
    - name: Test
      run: cabal test

